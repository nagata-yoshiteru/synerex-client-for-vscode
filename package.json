{
	"name": "synerex-client-for-vscode",
	"displayName": "Synerex Client for VSCode",
	"description": "Synerex Client for Visual Studio Code",
	"publisher": "ngtystr",
	"repository": {
		"type": "git",
		"url": "https://github.com/nagata-yoshiteru/synerex-client-for-vscode"
	},
	"version": "0.4.1",
	"engines": {
		"vscode": "^1.45.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:synerexClient.start",
		"onStartupFinished"
	],
	"main": "./dist/extension",
	"contributes": {
		"commands": [
			{
				"command": "synerexClient.start",
				"title": "Start Synerex Client"
			},
			{
				"command": "synerexClient.stop",
				"title": "Stop Synerex Client"
			},
			{
				"command": "synerexClient.update",
				"title": "Update Server - Synerex Client"
			},
			{
				"command": "synerexClient.startSynerex",
				"title": "Start Synerex Server - Synerex Client"
			},
			{
				"command": "synerexClient.startNode",
				"title": "Start Node Server - Synerex Client"
			},
			{
				"command": "synerexClient.startProxyPrv",
				"title": "Start Proxy Provider - Synerex Client"
			},
			{
				"command": "synerexClient.startHVLPrv",
				"title": "Start Harmoware-VIS Layers Provider - Synerex Client"
			}
		],
		"configuration": {
			"title": "Synerex Client",
			"properties": {
				"synerexClient.enableClient": {
					"type": "boolean",
					"scope": "window",
					"default": false,
					"description": "If enabled, launch this extension after VSCode started."
				},
				"synerexClient.enableAutoStart": {
					"type": "boolean",
					"scope": "window",
					"default": false,
					"description": "If enabled, launch Synerex Servers and Providers after VSCode started."
				},
				"synerexClient.synerexServer.path": {
					"type": "string",
					"scope": "window",
					"default": "",
					"description": "Specifies the path to Synerex Server. If not specified, extension will install it automatically from GitHub source."
				},
				"synerexClient.nodeServer.path": {
					"type": "string",
					"scope": "window",
					"default": "",
					"description": "Specifies the path to Node Server. If not specified, extension will install it automatically from GitHub source."
				},
				"synerexClient.proxyProvider.path": {
					"type": "string",
					"scope": "window",
					"default": "",
					"description": "Specifies the path to Proxy Provider. If not specified, extension will install it automatically from GitHub source."
				},
				"synerexClient.harmovisLayersProvider.path": {
					"type": "string",
					"scope": "window",
					"default": "",
					"description": "Specifies the path to Harmoware-VIS Layers Provider. If not specified, extension will install it automatically from GitHub source."
				},
				"synerexClient.synerexServer.enabled": {
					"type": "boolean",
					"scope": "window",
					"default": true,
					"description": "Whether to use Synerex Server."
				},
				"synerexClient.nodeServer.enabled": {
					"type": "boolean",
					"scope": "window",
					"default": true,
					"description": "Whether to use Node Server."
				},
				"synerexClient.proxyProvider.enabled": {
					"type": "boolean",
					"scope": "window",
					"default": false,
					"description": "Whether to use Proxy Provider."
				},
				"synerexClient.harmovisLayersProvider.enabled": {
					"type": "boolean",
					"scope": "window",
					"default": false,
					"description": "Whether to use Harmoware-VIS Layers Provider."
				},
				"synerexClient.synerexServer.enableAutoStart": {
					"type": "boolean",
					"scope": "window",
					"default": true,
					"description": "Whether to launch Synerex Server automatically."
				},
				"synerexClient.nodeServer.enableAutoStart": {
					"type": "boolean",
					"scope": "window",
					"default": true,
					"description": "Whether to launch Node Server automatically."
				},
				"synerexClient.proxyProvider.enableAutoStart": {
					"type": "boolean",
					"scope": "window",
					"default": true,
					"description": "Whether to launch Proxy Provider automatically."
				},
				"synerexClient.harmovisLayersProvider.enableAutoStart": {
					"type": "boolean",
					"scope": "window",
					"default": true,
					"description": "Whether to launch Harmoware-VIS Layers Provider automatically."
				},
				"synerexClient.synerexServer.version": {
					"type": "string",
					"scope": "window",
					"default": "master",
					"description": "Which Synerex Server version to install. Specify with commit hash, tag or branch bame. If not specified, extension will install latest tag version."
				},
				"synerexClient.nodeServer.version": {
					"type": "string",
					"scope": "window",
					"default": "master",
					"description": "Which Node Server version to install. Specify with commit hash, tag or branch bame. If not specified, extension will install latest tag version."
				},
				"synerexClient.proxyProvider.version": {
					"type": "string",
					"scope": "window",
					"default": "master",
					"description": "Which Proxy Provider version to install. Specify with commit hash, tag or branch bame. If not specified, extension will install latest tag version."
				},
				"synerexClient.harmovisLayersProvider.version": {
					"type": "string",
					"scope": "window",
					"default": "master",
					"description": "Which Harmoware-VIS Layers Provider version to install. Specify with commit hash, tag or branch bame. If not specified, extension will install latest tag version."
				}
			}
		},
		"taskDefinitions": [
			{
				"type": "synerexClient.synerexServer"
			},
			{
				"type": "synerexClient.nodeServer"
			},
			{
				"type": "synerexClient.proxyProvider"
			},
			{
				"type": "synerexClient.harmovisLayersProvider"
			}
		]
	},
	"scripts": {
		"lint": "eslint .",
		"pretest": "yarn run lint",
		"test": "node ./test/runTest.js",
		"vscode:prepublish": "webpack --mode production || echo webpack-fail",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"start": "yarn webpack-dev",
		"build": "vsce package",
		"test-compile": "tsc -p ./",
		"deploy": "vsce publish --yarn"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"@types/vscode": "^1.45.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.2",
		"typescript": "^3.8.3",
		"vsce": "^1.77.0",
		"vscode-test": "^1.3.0",
		"webpack": "^4.43.0",
		"webpack-cli": "^3.3.11"
	},
	"dependencies": {
		"git-clone": "^0.1.0",
		"simple-tcpscan": "^1.0.0"
	}
}
